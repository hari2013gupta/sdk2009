git push origin -d branch-name
git branch --delete <branch-name>
//----------------------------------------------
export PATH=~/Documents/src/flutter/bin:$PATH
//----------------------download module------------------------

//----------------------------------------------
Create an upload keystore
#
On macOS or Linux, use the following command:

keytool -genkey -v -keystore ~/upload-keystore.jks -keyalg RSA \
        -keysize 2048 -validity 10000 -alias upload

On Windows, use the following command in PowerShell:

keytool -genkey -v -keystore $env:USERPROFILE\upload-keystore.jks `
        -storetype JKS -keyalg RSA -keysize 2048 -validity 10000 `
        -alias upload
//-----------------pigeon-----------------------
flutter pub run pigeon \
--input pigeons/message_data.dart \
--dart_out lib/pigeon.dart \
--objc_header_out ios/Runner/pigeon.h \
--objc_source_out ios/Runner/pigeon.m \
--java_out ./android/app/src/main/java/dev/sdk2009/pigeon/Pigeon.java \
--java_package "dev.sdk2009.pigeon"

flutter pub run pigeon \
--input pigeons/message_data.dart \
--dart_out lib/pigeon.dart \
--objc_header_out ios/Classes/pigeon/pigeon.swift \
--kotlin_out ./android/src/main/kotlin/com/sdk2009/sdk2009/pigeon/Pigeon.kt \
--kotlin_package "com.sdk2009.sdk2009.pigeon"

@ConfigurePigeon(PigeonOptions(
  dartOut: 'lib/src/messages.g.dart',
  dartOptions: DartOptions(),
  cppOptions: CppOptions(namespace: 'pigeon_example'),
  cppHeaderOut: 'windows/runner/messages.g.h',
  cppSourceOut: 'windows/runner/messages.g.cpp',
  gobjectHeaderOut: 'linux/messages.g.h',
  gobjectSourceOut: 'linux/messages.g.cc',
  gobjectOptions: GObjectOptions(),
  kotlinOut:
      'android/app/src/main/kotlin/dev/flutter/pigeon_example_app/Messages.g.kt',
  kotlinOptions: KotlinOptions(),
  javaOut: 'android/app/src/main/java/io/flutter/plugins/Messages.java',
  javaOptions: JavaOptions(),
  swiftOut: 'ios/Runner/Messages.g.swift',
  swiftOptions: SwiftOptions(),
  objcHeaderOut: 'macos/Runner/messages.g.h',
  objcSourceOut: 'macos/Runner/messages.g.m',
  // Set this to a unique prefix for your plugin or application, per Objective-C naming conventions.
  objcOptions: ObjcOptions(prefix: 'PGN'),
  copyrightHeader: 'pigeons/copyright.txt',
  dartPackageName: 'pigeon_example_package',
))
dart run pigeon --input path/to/input.dart

