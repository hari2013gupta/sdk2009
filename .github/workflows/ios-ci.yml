# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Ios-CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1

      - name: Setup Flutter Environment
        uses: subosito/flutter-action@v2
        id: flutter-action
        with:
          channel: stable # [dev, beta]
          flutter-version: 3.24.4 #[5b12b74, tag, commit, branch, main]
#          flutter-version-file: pubspec.yaml # path to pubspec.yaml [exact-ver]
          # optional parameters follow
          cache: true
          architecture: x64

      - name: Flutter version
        run: |
          flutter --version
          flutter pub get

      - name: Unit Test
        run: flutter test

      - name: Start IOS Release Build
        run: |
          cd example
          flutter build ios --release --no-codesign

#      - uses: cedvdb/action-flutter-build-ios@v1
#        with:
#          # always use --export-options-plist=ios/GithubActionsExportOptions.plist
#          build-cmd: flutter build ipa --release --flavor dev --export-options-plist=ios/GithubActionsExportOptions.plist
#          certificate-base64: ${{ secrets.IOS_BUILD_CERTIFICATE_BASE64 }}
#          certificate-password: ${{ secrets.IOS_BUILD_CERTIFICATE_PASSWORD }}
#          provisioning-profile-base64: ${{ secrets.IOS_MOBILE_PROVISIONING_PROFILE_BASE64 }}
#          keychain-password: ${{ secrets.IOS_GITHUB_KEYCHAIN_PASSWORD }}

      # Upload generated apk to the artifacts
#      - name: Upload IOS Release Build
#        uses: actions/upload-artifact@v4
#        with:
#          name: release-build
#          path: example/build/app/outputs/flutter-apk/app-release.apk
#          if-no-files-found: error
